;
; Asterisk configuration file
;
; Module Loader configuration file
;

[modules]
; In the early years we used to set autoload=no to create a smaller memory footprint.
; In recent years the amount of interdependant modules has grown quite a bit, so that
; is no longer a very convenient road. So here is autoload=yes with a lot of noload's.
; You can uncomment the noload's if you want to enable specific modules.
autoload=yes

; All of these modules are deprecated, so enable these only if you're really sure about it.
noload => app_adsiprog.so
noload => app_getcpeid.so
noload => app_ices.so
noload => app_image.so
noload => app_macro.so
noload => app_nbscat.so
noload => app_url.so
noload => res_adsi.so
noload => res_monitor.so

; I've never really bothered with AEL syntax
noload => pbx_ael.so
noload => res_ael_share.so

; Resource modules currently not needed
noload => res_clialiases.so
noload => res_config_ldap.so
noload => res_config_odbc.so
noload => res_config_pgsql.so
noload => res_config_sqlite3.so
noload => res_odbc.so
noload => res_odbc_transaction.so
noload => res_phoneprov.so
noload => res_pjsip_phoneprov_provider.so
noload => res_smdi.so
noload => res_snmp.so
noload => res_xmpp.so

; PBX modules currently not needed
noload => pbx_dundi.so

; Functions currently not needed
noload => func_odbc.so

; Channel modules currently not needed
noload => chan_console.so
noload => chan_iax2.so
noload => chan_oss.so
noload => chan_mgcp.so
noload => chan_motif.so
noload => chan_sip.so
noload => chan_skinny.so
noload => chan_unistim.so
noload => chan_alsa.so

; Dialplan applications currently not needed
noload => app_alarmreceiver.so
noload => app_festival.so
noload => app_jack.so
noload => app_morsecode.so
noload => app_test.so

; CDR modules not currently needed
noload => cdr_adaptive_odbc.so
noload => cdr_csv.so
noload => cdr_custom.so
noload => cdr_odbc.so
noload => cdr_pgsql.so
noload => cdr_radius.so
noload => cdr_tds.so
noload => cdr_sqlite.so
noload => cdr_sqlite3_custom.so

; CEL modules not currently needed
noload => cel_custom.so
noload => cel_odbc.so
noload => cel_pgsql.so
noload => cel_radius.so
noload => cel_sqlite3_custom.so
noload => cel_tds.so


; Any modules that need to be loaded before the Asterisk core has been
; initialized (just after the logger has been initialized) can be loaded
; using 'preload'. This will frequently be needed if you wish to map all
; module configuration files into Realtime storage, since the Realtime
; driver will need to be loaded before the modules using those configuration
; files are initialized.
;
; An example of loading ODBC support would be:
;preload => res_odbc.so
;preload => res_config_odbc.so


; Module names listed in "global" section will have symbols globally
; exported to modules loaded after them.
;
[global]
